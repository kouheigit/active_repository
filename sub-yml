volumes:
  db-store:
  psysh-store:

services:
  app:
    build:
      context: .
      dockerfile: ./infra/docker/php/Dockerfile
      target: ${APP_BUILD_TARGET:-development}
    volumes:
      - type: bind
        source: ./src
        target: /data
      - type: volume
        source: psysh-store
        target: /root/.config/psysh
        volume:
          nocopy: true
    environment:
      - APP_DEBUG=${APP_DEBUG:-true}
      - APP_KEY=${APP_KEY:-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX}
      - APP_ENV=${APP_ENV:-local}
      - APP_URL=${APP_URL:-http://localhost}
      - LOG_CHANNEL=${LOG_CHANNEL:-stderr}
      - LOG_STDERR_FORMATTER=${LOG_STDERR_FORMATTER:-Monolog\Formatter\JsonFormatter}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE:-laravel}
      - DB_USERNAME=${DB_USERNAME:-phper}
      - DB_PASSWORD=${DB_PASSWORD:-secret}

  web:
    build:
      context: .
      dockerfile: ./infra/docker/nginx/Dockerfile
    ports:
      - "${WEB_PUBLISHED_PORT:-80}:80"
    volumes:
      - type: bind
        source: ./src
        target: /data

  db:
    build:
      context: .
      dockerfile: ./infra/docker/mysql/Dockerfile
    ports:
      - "${DB_PUBLISHED_PORT:-3306}:3306"
    volumes:
      - type: volume
        source: db-store
        target: /var/lib/mysql
        volume:
          nocopy: true
    environment:
      - MYSQL_DATABASE=${DB_DATABASE:-laravel}
      - MYSQL_USER=${DB_USERNAME:-phper}
      - MYSQL_PASSWORD=${DB_PASSWORD:-secret}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-secret}

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      - PMA_HOST=db
      - PMA_USER=${DB_USERNAME:-phper}
      - PMA_PASSWORD=${DB_PASSWORD:-secret}
      - UPLOAD_LIMIT=64M

  test-db:
    image: mysql:8.0
    container_name: test-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: testing
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpass
    ports:
      - "3307:3306"

  ci-cd:
    image: ghcr.io/actions/runner:v2.308.0  # 利用可能なタグを指定
    container_name: ci-cd-runner
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - RUNNER_NAME=ci-cd-runner
      - RUNNER_WORKDIR=/actions-runner
      - REPO_URL=${GITHUB_REPOSITORY_URL}
      - RUNNER_TOKEN=${GITHUB_RUNNER_TOKEN}